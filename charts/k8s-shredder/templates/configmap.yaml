apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "k8s-shredder.fullname" . }}-config
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "k8s-shredder.labels" . | indent 4 }}
data:
  config.yaml: |-
    EvictionLoopInterval: "{{.Values.shredder.EvictionLoopInterval}}"
    ParkedNodeTTL: "{{.Values.shredder.ParkedNodeTTL}}"
    RollingRestartThreshold: "{{.Values.shredder.RollingRestartThreshold}}"
    UpgradeStatusLabel: "{{.Values.shredder.UpgradeStatusLabel}}"
    ExpiresOnLabel: "{{.Values.shredder.ExpiresOnLabel}}"
    NamespacePrefixSkipInitialEviction: "{{.Values.shredder.NamespacePrefixSkipInitialEviction}}"
    RestartedAtAnnotation: "{{.Values.shredder.RestartedAtAnnotation}}"
    AllowEvictionLabel: "{{.Values.shredder.AllowEvictionLabel}}"
    ToBeDeletedTaint: "{{.Values.shredder.ToBeDeletedTaint}}"
    ArgoRolloutsAPIVersion: "{{.Values.shredder.ArgoRolloutsAPIVersion}}"
    DriftedNodeExpiration: "{{.Values.shredder.DriftedNodeExpiration}}"
    EnableKarpenterDriftDetection: {{.Values.shredder.EnableKarpenterDriftDetection}}
    ParkedByLabel: "{{.Values.shredder.ParkedByLabel}}"
    ParkedNodeTaint: "{{.Values.shredder.ParkedNodeTaint}}"
    EnableNodeLabelDetection: {{.Values.shredder.EnableNodeLabelDetection}}
    NodeLabelsToDetect: {{- toYaml .Values.shredder.NodeLabelsToDetect | nindent 6}}
